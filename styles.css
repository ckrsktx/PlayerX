:root {
    --primary: #6c5ce7;
    --secondary: #a29bfe;
    --dark: #2d3436;
    --light: #f5f6fa;
    --glass: rgba(255, 255, 255, 0.1);
    --favorite: #ff4757;
    --favorites-bg: #3a3a52;
    --favorites-item: #4a4a6a;
    --search-bg: rgba(50, 50, 70, 0.9);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}
// Configuração básica do player
const audio = new Audio();
let currentPlaylist = [];
let currentSongIndex = 0;
let isPlaying = false;

// Elementos da interface
const playBtn = document.getElementById('play-btn');
const prevBtn = document.getElementById('prev-btn');
const nextBtn = document.getElementById('next-btn');
const songTitle = document.getElementById('song-title');
const songArtist = document.getElementById('song-artist');
const genreSelector = document.getElementById('genre-selector');

// Playlists reais do seu repositório
const PLAYLISTS = {
  Rock: 'https://raw.githubusercontent.com/ckrsktx/PlayerX/main/Rock.pls',
  Christian: 'https://raw.githubusercontent.com/ckrsktx/PlayerX/main/Christian.pls'
};

// Carrega uma playlist
async function loadPlaylist(genre) {
  try {
    const response = await fetch(PLAYLISTS[genre]);
    const data = await response.text();
    currentPlaylist = parsePLS(data);
    
    if (currentPlaylist.length > 0) {
      loadSong(0);
      enableControls();
    }
  } catch (error) {
    console.error('Erro ao carregar playlist:', error);
    alert('Erro ao carregar a playlist. Verifique o console para detalhes.');
  }
}

// Função para analisar o arquivo PLS (atualizada)
function parsePLS(data) {
  const lines = data.split('\n');
  const songs = [];
  let currentSong = {};

  lines.forEach(line => {
    if (line.startsWith('File')) {
      currentSong.file = line.split('=')[1]?.trim();
    } else if (line.startsWith('Title')) {
      const title = line.split('=')[1]?.trim();
      const [artist, songTitle] = title.includes(' - ') ? 
        title.split(' - ') : ['Artista Desconhecido', title];
      
      currentSong.title = songTitle || 'Música Desconhecida';
      currentSong.artist = artist;
      
      if (currentSong.file) {
        songs.push({...currentSong});
        currentSong = {};
      }
    }
  });

  return songs;
}

// Carrega uma música específica
function loadSong(index) {
  if (!currentPlaylist.length || index < 0 || index >= currentPlaylist.length) return;

  const song = currentPlaylist[index];
  currentSongIndex = index;
  
  audio.src = song.file;
  songTitle.textContent = song.title;
  songArtist.textContent = song.artist;
  
  if (isPlaying) {
    audio.play().catch(e => {
      console.error('Erro ao reproduzir:', e);
      alert('Erro ao reproduzir a música. Verifique o console.');
    });
  }
}

// Habilita os controles
function enableControls() {
  playBtn.disabled = false;
  prevBtn.disabled = false;
  nextBtn.disabled = false;
}

// Event Listeners
genreSelector.addEventListener('change', (e) => {
  if (e.target.value) {
    loadPlaylist(e.target.value);
  }
});

playBtn.addEventListener('click', () => {
  if (!currentPlaylist.length) return;
  
  isPlaying = !isPlaying;
  playBtn.innerHTML = isPlaying ? '<i class="fas fa-pause"></i>' : '<i class="fas fa-play"></i>';
  
  if (isPlaying) {
    audio.play().catch(e => {
      console.error('Erro ao reproduzir:', e);
      alert('Erro ao reproduzir. Verifique se as URLs das músicas são acessíveis.');
    });
  } else {
    audio.pause();
  }
});

prevBtn.addEventListener('click', () => {
  const newIndex = (currentSongIndex - 1 + currentPlaylist.length) % currentPlaylist.length;
  loadSong(newIndex);
});

nextBtn.addEventListener('click', () => {
  const newIndex = (currentSongIndex + 1) % currentPlaylist.length;
  loadSong(newIndex);
});

// Verificação inicial
console.log('PlayerX inicializado');
body {
    background: url('https://images.unsplash.com/photo-1470225620780-dba8ba36b745?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80') no-repeat center center fixed;
    background-size: cover;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    backdrop-filter: blur(10px);
    color: var(--light);
}

.player {
    width: 95%;
    max-width: 420px;
    background: var(--glass);
    border-radius: 20px;
    padding: 20px;
    backdrop-filter: blur(10px);
    box-shadow: 0 25px 45px rgba(0, 0, 0, 0.2);
    border: 1px solid rgba(255, 255, 255, 0.1);
    overflow: hidden;
    position: relative;
    z-index: 1;
}

.menu-btn {
    position: absolute;
    top: 15px;
    right: 15px;
    background: var(--glass);
    border: none;
    color: var(--light);
    font-size: 1.2rem;
    cursor: pointer;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 10;
    backdrop-filter: blur(5px);
    transition: transform 0.2s;
}

.menu-btn:hover {
    transform: scale(1.1);
}

.panel-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
    z-index: 4;
    display: none;
}

.panel-overlay.show {
    display: block;
}

.favorites-panel {
    position: fixed;
    top: 0;
    right: -100%;
    width: 85%;
    max-width: 350px;
    height: 100%;
    background: var(--favorites-bg);
    backdrop-filter: blur(20px);
    border-radius: 20px 0 0 20px;
    padding: 20px;
    transition: right 0.3s ease;
    overflow-y: auto;
    z-index: 5;
    border-left: 1px solid rgba(255, 255, 255, 0.1);
    scrollbar-width: none;
}

.favorites-panel::-webkit-scrollbar {
    display: none;
}

.favorites-panel.show {
    right: 0;
}

.favorites-panel h3 {
    margin-bottom: 15px;
    text-align: center;
    padding-bottom: 10px;
    border-bottom: 1px solid var(--glass);
}

.favorite-item {
    display: flex;
    align-items: center;
    padding: 12px;
    border-radius: 10px;
    margin-bottom: 8px;
    cursor: pointer;
    transition: all 0.2s;
    background: var(--favorites-item);
}

.favorite-item:hover {
    background: #5a5a7a;
}

.favorite-item img {
    width: 45px;
    height: 45px;
    border-radius: 5px;
    margin-right: 12px;
    object-fit: cover;
    flex-shrink: 0;
}

.favorite-item-info {
    flex: 1;
    min-width: 0;
}

.favorite-item-info strong {
    display: block;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 0.95rem;
}

.favorite-item-info p {
    font-size: 0.8rem;
    opacity: 0.8;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.remove-favorite {
    background: none;
    border: none;
    color: rgba(255, 255, 255, 0.6);
    cursor: pointer;
    margin-left: 10px;
    font-size: 0.9rem;
    transition: color 0.2s;
    flex-shrink: 0;
}

.remove-favorite:hover {
    color: var(--favorite);
}

.cover {
    width: 180px;
    height: 180px;
    margin: 0 auto 15px;
    border-radius: 15px;
    overflow: hidden;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    position: relative;
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    display: flex;
    justify-content: center;
    align-items: center;
}

.cover .default-cover {
    font-size: 3.5rem;
    color: rgba(255, 255, 255, 0.7);
}

.cover img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: none;
}

.info {
    text-align: center;
    margin-bottom: 15px;
    min-height: 70px;
}

.info h2 {
    font-size: 1.4rem;
    margin-bottom: 5px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    padding: 0 10px;
}

.info p {
    font-size: 0.95rem;
    opacity: 0.8;
    margin-bottom: 5px;
}

.genre-selector-container {
    margin: 15px 0;
    text-align: center;
}

.genre-label {
    display: block;
    margin-bottom: 5px;
    font-size: 0.9rem;
    opacity: 0.8;
}

.genre-selector {
    padding: 8px 15px;
    border-radius: 20px;
    border: none;
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(5px);
    color: white;
    font-size: 0.9rem;
    outline: none;
    width: 100%;
    max-width: 250px;
    cursor: pointer;
}

.genre-selector:focus {
    background: rgba(255, 255, 255, 0.25);
}

.progress-container {
    width: 100%;
    height: 5px;
    background: var(--glass);
    border-radius: 3px;
    margin-bottom: 15px;
    cursor: pointer;
    display: none;
}

.progress {
    height: 100%;
    background: var(--primary);
    border-radius: 3px;
    width: 0%;
    transition: width 0.1s linear;
}

.time {
    display: flex;
    justify-content: space-between;
    font-size: 0.75rem;
    opacity: 0.8;
    margin-bottom: 15px;
    display: none;
}

.controls {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 15px;
    margin-bottom: 15px;
}

.controls button {
    background: none;
    border: none;
    color: var(--light);
    font-size: 1.4rem;
    cursor: pointer;
    transition: all 0.2s ease;
    width: 45px;
    height: 45px;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
}

.controls button:hover {
    background: var(--glass);
}

.controls .play-btn {
    background: var(--primary);
    width: 55px;
    height: 55px;
    font-size: 1.6rem;
}

.controls .play-btn:hover {
    background: var(--secondary);
}

.bottom-controls {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-bottom: 15px;
}

.volume-btn, .shuffle-btn, .favorite-btn {
    background: none;
    border: none;
    color: var(--light);
    font-size: 1.4rem;
    cursor: pointer;
    transition: all 0.2s ease;
    width: 45px;
    height: 45px;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
}

.volume-btn:hover, .shuffle-btn:hover, .favorite-btn:hover {
    background: var(--glass);
}

.shuffle-btn.active {
    color: var(--primary);
}

.favorite-btn.active {
    color: var(--favorite);
}

.init-message {
    text-align: center;
    margin: 15px 0;
    opacity: 0.8;
    font-size: 0.9rem;
}

.default-playlist-cover {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
}

.search-container {
    width: calc(100% - 30px);
    margin: 10px auto 15px;
    position: relative;
    display: none;
}

.search-input {
    width: 100%;
    padding: 12px 40px 12px 15px;
    border-radius: 25px;
    border: none;
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(5px);
    color: white;
    font-size: 0.9rem;
    outline: none;
    transition: all 0.3s;
}

.search-input:focus {
    background: rgba(255, 255, 255, 0.25);
}

.search-icon {
    position: absolute;
    right: 15px;
    top: 50%;
    transform: translateY(-50%);
    color: rgba(255, 255, 255, 0.7);
}

.search-results {
    position: absolute;
    bottom: calc(100% + 5px);
    left: 0;
    width: 100%;
    max-height: 60vh;
    overflow-y: auto;
    background: var(--search-bg);
    backdrop-filter: blur(20px);
    border-radius: 15px;
    padding: 10px;
    display: none;
    z-index: 20;
    scrollbar-width: none;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
}

.search-results::-webkit-scrollbar {
    display: none;
}

.search-result-item {
    padding: 10px 12px;
    border-radius: 8px;
    margin-bottom: 5px;
    cursor: pointer;
    transition: background 0.2s;
}

.search-result-item:hover {
    background: rgba(255, 255, 255, 0.1);
}

.search-result-artist {
    font-size: 0.8rem;
    opacity: 0.8;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.search-result-title {
    font-size: 0.95rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    margin-top: 2px;
}

.default-fav-cover {
    width: 45px;
    height: 45px;
    background: var(--primary);
    border-radius: 5px;
    margin-right: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
}

.default-fav-cover i {
    font-size: 1.2rem;
    color: rgba(255, 255, 255, 0.7);
}

@media (max-width: 380px) {
    .player {
        padding: 15px;
    }
    .cover {
        width: 150px;
        height: 150px;
    }
    .controls button {
        width: 40px;
        height: 40px;
        font-size: 1.2rem;
    }
    .controls .play-btn {
        width: 50px;
        height: 50px;
        font-size: 1.4rem;
    }
    .bottom-controls button {
        width: 40px;
        height: 40px;
        font-size: 1.2rem;
    }
    .favorites-panel {
        width: 90%;
    }
    .search-results {
        max-height: 50vh;
    }
    .default-fav-cover {
        width: 40px;
        height: 40px;
        margin-right: 10px;
    }
}
